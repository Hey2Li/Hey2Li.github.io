<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Android学习笔记</title>
    <link href="/2023/04/14/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89Android%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B8%83%E5%B1%80/"/>
    <url>/2023/04/14/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89Android%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B8%83%E5%B1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="Android中的常用布局"><a href="#Android中的常用布局" class="headerlink" title="Android中的常用布局"></a>Android中的常用布局</h1><h2 id="1线性布局-LinearLayout"><a href="#1线性布局-LinearLayout" class="headerlink" title="1线性布局 LinearLayout"></a>1线性布局 LinearLayout</h2><p>​        线性布局是Android的基本布局，可以水平排列<code>horizontal</code>和垂直排列<code>vertical</code>通过<code>android:orientation</code>来设置方向，系统默认布局为水平方向排列，这跟iOS中的<code>VStack</code>,<code>HStack</code>有些相似。<br>​        除了方向之外，线性布局还有一个权重概念，所谓权重就是指布局的子视图各自拥有多大的比例的宽高。占比多或是占比少通过属性<code>android:layout_weight</code>来设置。。不过视图有宽高两个方向，系统怎知layout_weight表示哪个方向的权重呢？所以这里有个规定，一旦设置了layout_weight属性值，便要求layout_width填0dp或者layout_height填0dp。如果layout_width填0dp，则layout_weight表示水平方向的权重，下级视图会从左往右分割线性布局；如果layout_height填0dp，则layout_weight表示垂直方向的权重，下级视图会从上往下分割线性布局。</p><p>​        按照左右均分的话，线性布局设置水平方向horizontal，且甲乙两视图的layout_width都填0dp，layout_weight都填1，此时横排的XML片段示例如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;0dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_weight</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;横排第一个&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;0dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_weight</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;横排第二个&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><p>​        按照上下均分的话，线性布局设置垂直方向vertical，且甲乙两视图的layout_height都填0dp，</p><p>layout_weight都填1，此时竖排的XML片段示例如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;0dp&quot;</span> <span class="hljs-attr">android:layout_weight</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;竖排第一个&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;0dp&quot;</span> <span class="hljs-attr">android:layout_weight</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;竖排第二个&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><p>具体界面如图</p><p><img src="https://raw.githubusercontent.com/Hey2Li/blog.img/master/image-20230414105040856.png" alt="image-20230414105040856"></p><h2 id="2-相对布局RelativeLayout"><a href="#2-相对布局RelativeLayout" class="headerlink" title="2 相对布局RelativeLayout"></a>2 相对布局RelativeLayout</h2><p>线性布局的子视图是顺序排列的，相对布局的视图位置是有其他视图决定的，学过iOS肯定不陌生，毕竟iOS大部分的布局都是相对布局。如果不设定下级视图的参照物，默认就在RelativeLayout的左上角。</p><table><thead><tr><th>相对位置的属性取值</th><th>相对位置说明</th></tr></thead><tbody><tr><td>layout_toLeftOf</td><td>当前视图在指定视图的左边</td></tr><tr><td>layout_toRrightOf</td><td>当前视图在指定视图的右边</td></tr><tr><td>layout_above</td><td>在指定视图的上方</td></tr><tr><td>layout_below</td><td>在指定视图的下方</td></tr><tr><td>layout_alignLeft</td><td>当前视图与指定视图左对齐</td></tr><tr><td>layout_alignRight</td><td>当前视图与指定视图右对齐</td></tr><tr><td>layout_alignTop</td><td>当前视图与指定视图顶对齐</td></tr><tr><td>layout_alignBottom</td><td>当前视图与指定视图底对齐</td></tr><tr><td>layout_centerInParent</td><td>当前视图在上级视图中间</td></tr><tr><td>layout_centerHorizontal</td><td>当前视图在上级视图的水平方向居中</td></tr><tr><td>layout_centerVertical</td><td>当前视图与上级视图垂直方向居中</td></tr><tr><td>layout_alignParentLeft</td><td>当前视图与上级视图左对齐</td></tr><tr><td>layout_alignParentRight</td><td>当前视图与上级视图右对齐</td></tr><tr><td>layout_alignParentTop</td><td>当前视图与上级视图顶对齐</td></tr><tr><td>layout_alignParentBottom</td><td>当前试图与上级视图底部对齐</td></tr></tbody></table><p>需要记住的属性大概就这么多，对比<code>masonry</code>好像确实有点多，不过见文知意也不需要特别去记。</p><p>xml代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">RelativeLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;150dp&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_centerInParent</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#ffffff&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我在中间&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_center_horizontal&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_centerHorizontal</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我在水平中间&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_center_vertical&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_centerVertical</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我在垂直中间&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_parent_left&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_alignParentLeft</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我跟上级左边对齐&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_parent_right&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_alignParentRight</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我跟上级右边对齐&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_parent_top&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_alignParentTop</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我跟上级顶部对齐&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_parent_bottom&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_alignParentBottom</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我跟上级底部对齐&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_left_center&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_toLeftOf</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:layout_alignTop</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我在中间左边&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_right_center&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_toRightOf</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:layout_alignBottom</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我在中间右边&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_above_center&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_above</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:layout_alignLeft</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我在中间上面&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_below_center&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_below</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:layout_alignRight</span>=<span class="hljs-string">&quot;@+id/tv_center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#eeeeee&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我在中间下面&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;11sp&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">RelativeLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/Hey2Li/blog.img/master/image-20230414112641418.png" alt="image-20230414112641418"></p><h2 id="3-网格布局"><a href="#3-网格布局" class="headerlink" title="3 网格布局"></a>3 网格布局</h2><p>​        虽然线性布局能在水平和垂直方向排列，但是它不支持多行多列的布局方式，所有要实现类似表格那样的多行多列形式，可以采用网格布局GridLayout。</p><p>​        网格布局默认从左往右，从上到下排列，它先从第一行从左往右放置子视图，塞满之后另起一行放置其余的子视图，如此循环往复直至放置完毕。为了判断能够容纳几行几列，网格视图新增以下属性<code>android:columnCount</code>与<code>android:rowCount</code>两个属性，<code>columnCount</code>指定列数，<code>rowCount</code>指定行数。</p><p>​        下面是网格布局的布局代码示例，它规定了一个两行两列的网格布局，且内部容纳四个文本视图。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 根布局为两行两列的网格布局，其中列数由columnCount指定，行数由rowCount指定 --&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">GridLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:columnCount</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">android:rowCount</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;180dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;60dp&quot;</span> <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#ffcccc&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;浅红色&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;180dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;60dp&quot;</span> <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#ffaa00&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;橙色&quot;</span><span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;180dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;60dp&quot;</span> <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#00ff00&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;绿色&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> /&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;180dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;60dp&quot;</span> <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#660066&quot;</span> <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;深紫色&quot;</span> <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;17sp&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">GridLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/Hey2Li/blog.img/master/image-20230414132425562.png" alt="image-20230414132425562"></p><h2 id="4-滚动视图ScrollView"><a href="#4-滚动视图ScrollView" class="headerlink" title="4 滚动视图ScrollView"></a>4 滚动视图ScrollView</h2><p>滚动视图顾名思义就是可以滚动的视图，当内容超出手机展示界面时需滑动手机屏幕才能完整展示，但是一般的视图不支持自行滚动，这时就需要借助滚动视图。与线性布局类似，滚动视图也分为水平和垂直两类，其中垂直滚动视图为ScrollView，水平滚动视图为HorizontalScrollView，这与iOS倒是不同，iOS只有一个ScrollView，只是有个属性可以设置水平还是垂直。滚动视图使用不用复杂，主要注意一下3点：</p><ul><li><p>垂直滚动时，layout_width属性设置为match_parent,layout_height设置为wrap_content。</p></li><li><p>水平滚动时，layout_width属性设置为wrap_content,layout_height设置为match_parent.</p></li><li><p>滚动视图节点下必须且只能挂着一个子布局节点，否则会在运行时报错<code>Caused by： java.lang.IllegalStateException：ScrollView can host only one direct child</code>。</p></li></ul><p>下面是垂直滚动视图ScrollView和水平滚动HorizontalScrollView的代码示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span> <br>  <span class="hljs-comment">&lt;!-- HorizontalScrollView是水平方向的滚动视图，当前高度为200dp --&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">HorizontalScrollView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;200dp&quot;</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 水平方向的线性布局，两个子视图的颜色分别为青色和黄色 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span> <br>      <span class="hljs-tag">&lt;<span class="hljs-name">View</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;300dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#aaffff&quot;</span> /&gt;</span> <br>      <span class="hljs-tag">&lt;<span class="hljs-name">View</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;300dp&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#ffff00&quot;</span> /&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span> <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">HorizontalScrollView</span>&gt;</span> <br>  <span class="hljs-comment">&lt;!-- ScrollView是垂直方向的滚动视图，当前高度为自适应 --&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">ScrollView</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span> <br>  <span class="hljs-comment">&lt;!-- 垂直方向的线性布局，两个子视图的颜色分别为绿色和橙色 --&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span> <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">View</span></span><br><span class="hljs-tag">          <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;400dp&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#00ff00&quot;</span> /&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">View</span></span><br><span class="hljs-tag">          <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span> <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;400dp&quot;</span> <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#ffffaa&quot;</span> /&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ScrollView</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><p>运行测试App，可知ScrollView在纵向滚动，而HorizontalScrollView在横向滚动。</p><p><em><strong>注意</strong></em>：有时ScrollView的实际内容不够充满整个屏幕，但是又想让它充满屏幕，如果把layout_height属性设为match_parent，结果还是不能充满，正确的做法是再增加一行属性<code>android:fillViewport</code>该属性为true表示允许充满视图窗口，代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">android:layout_height=&quot;match_parent&quot; <br>android:fillViewport=&quot;true&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多个ssh秘钥导致Git push失败及其解决方案</title>
    <link href="/2023/04/13/%E5%A4%9A%E4%B8%AAssh%E7%A7%98%E9%92%A5%E5%AF%BC%E8%87%B4Git-push%E5%A4%B1%E8%B4%A5%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2023/04/13/%E5%A4%9A%E4%B8%AAssh%E7%A7%98%E9%92%A5%E5%AF%BC%E8%87%B4Git-push%E5%A4%B1%E8%B4%A5%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>自从上次更换Mac，导致Hexo文件丢失后居然已经N年没有写Blog，最近心血来潮打算重新开始拾起来，于是便新建了一个Hexo将以前的替换，重新开始，索性便将遇到的问题当做这个Blog的第一篇吧。</p><p><strong>解决方案请直接看最后，中间都是无用废话</strong></p></blockquote><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>因为向GitHub推送内容需要ssh秘钥，但是我本地已经有了gitlab的秘钥，我又不想替换于是便Google一下如何配置多个ssh秘钥，命令如下：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ssh-keygen -t rsa -f ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.别名 -C <span class="hljs-string">&quot;邮箱地址&quot;</span><br></code></pre></td></tr></table></figure><p>比如要生成GitHub的ssh就可以这样：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ssh-keygen -t rsa -f ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.github -C <span class="hljs-string">&quot;邮箱地址&quot;</span><br></code></pre></td></tr></table></figure><p>我看完命令后直接生成完秘钥就关闭网页，这就导致我后面的一系列踩坑，不过幸亏有ChatGPT让我的坑踩得容易多了， 当然这都是后话了。</p><p>然后我就继续搭建Blog，当本地预览没问题后，我<code>hexo d</code> 后终端开始报错：</p> <figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs roboconf">git@github.com: Permission denied (publickey).<br>fatal: 无法读取远程仓库。<br><br>请确认您有正确的访问权限并且仓库存在。<br>FATAL &#123;<br>  <span class="hljs-attribute">err</span>: Error: Spawn failed<br>      at ChildProcess.&lt;anonymous&gt; (/Users/lee/blog/node_modules/hexo-util/lib/spawn<span class="hljs-variable">.js</span>:51:21)<br>      at ChildProcess<span class="hljs-variable">.emit</span> (node:events:390:28)<br>      at Process<span class="hljs-variable">.ChildProcess</span><span class="hljs-variable">._handle</span><span class="hljs-variable">.onexit</span> (node:internal/child_process:290:12) &#123;<br>    code: 128<br>  &#125;<br>&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo<span class="hljs-variable">.io</span>/docs/troubleshooting<span class="hljs-variable">.html</span><br></code></pre></td></tr></table></figure><p>继续使用<code>ssh -T git@github.com</code>发现并没有出现success，猜想可能是秘钥生成错误，但是检查一遍后发现并不是，继续使用<code>ssh -vT git@github.com</code>查看log，发现查找本地秘钥的时候并没有找到有别名的ssh秘钥，所以大概知道问题出在哪了。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>直接ChatGPT开问，它直接告诉我三条命令</p><ol><li>打开终端并运行以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(ssh-agent -s)</span>&quot;</span><br></code></pre></td></tr></table></figure><ol><li>确保 ssh-agent 正在运行。如果输出显示了 “Agent pid” 和一个数字，则说明 ssh-agent 正在运行。如果没有输出，则说明 ssh-agent 没有启动，您需要重新运行上述命令。</li><li>将 SSH 私钥文件添加到 ssh-agent 中。运行以下命令：</li></ol><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ssh-add ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.github<br></code></pre></td></tr></table></figure><ol start="3"><li>复制您的 SSH 公钥。运行以下命令来复制您的公钥：</li></ol> <figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">pbcopy &lt; ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.github.pub<br></code></pre></td></tr></table></figure><p>确实解决了，但是重启iTerm后发现又不能push了，继续问<br><img src="https://raw.githubusercontent.com/Hey2Li/blog.img/master/20230413183804.jpg"></p><p>AI直接让我改终端配置文件，然并无卵用，倒是陷入坑中跟ChatGPT聊天浪费不少时间。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>最后直接转换话题，问ChatGPT如何在Mac中配置多个ssh秘钥，给出结论和我开始的操作一样，不一样的是新增了config文件，真相大白，原因即是配置配置多个秘钥让Git可以识别不同的。</p><p>具体的方法如下：</p><p>在 Mac 上配置多个 SSH 秘钥的步骤如下：</p><ol><li>生成多个密钥对</li></ol><p>在终端中执行以下命令生成多个密钥对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;your_email@example.com&quot;</span> -f ~/.ssh/id_rsa_1<br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;your_email@example.com&quot;</span> -f ~/.ssh/id_rsa_2<br></code></pre></td></tr></table></figure><p>其中 <code>-f</code> 参数指定了私钥和公钥的文件名，可以根据需要自定义。</p><ol><li>添加私钥到 SSH Agent</li></ol><p>执行以下命令将私钥添加到 SSH Agent：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-add ~/.ssh/id_rsa_1<br>ssh-add ~/.ssh/id_rsa_2<br></code></pre></td></tr></table></figure><ol><li>配置 SSH 配置文件</li></ol><p>在 <code>~/.ssh/</code> 目录下创建 <code>config</code> 文件，并按照如下格式配置多个主机和对应的密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 第一个主机</span><br>Host host1<br>HostName example.com<br>User username<br>IdentityFile ~/.ssh/id_rsa_1<br><br><span class="hljs-comment"># 第二个主机</span><br>Host host2<br>HostName example.org<br>User username<br>IdentityFile ~/.ssh/id_rsa_2<br></code></pre></td></tr></table></figure><p>其中 <code>Host</code> 是主机别名，<code>HostName</code> 是主机名或 IP 地址，<code>User</code> 是登录用户名，<code>IdentityFile</code> 是对应的私钥文件路径。</p><ol><li>测试连接</li></ol><p>执行以下命令测试连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh host1<br>ssh host2<br></code></pre></td></tr></table></figure><p>如果连接成功，则表示配置成功。</p><p>这样就可以在 Mac 上使用多个 SSH 秘钥了。</p><p>经本人测试，重启终端后也可以正常使用。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>做完这一切后，我又找到那个只看了一半就关掉的如何配置多个秘钥的教程，发现后部分就是就是教你如何配置config的，真是被自己气死，看东西只看一半……</p><p>附上地址：<a href="https://blog.csdn.net/wxl1555/article/details/115682017">Mac如何生成并配置多个ssh秘钥_mac 创建多个ssh_牛长犇的博客-CSDN博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>fixs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/13/hello-world/"/>
    <url>/2023/04/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
